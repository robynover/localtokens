riot.tag2("balance",'<h5 if="{opts.header == ⁗true⁗}">Balance</h5> <div class="bal" ref="bal"></div>','balance,[data-is="balance"]{ text-align: center; } balance .bal,[data-is="balance"] .bal{ font-size: 4rem; }',"",function(opts){var self=this;this.on("mount",function(){var http=new XMLHttpRequest,username=opts.username,url="/api/user/"+username+"/balance";http.open("GET",url,!0),http.send(),http.onreadystatechange=function(){if(4==http.readyState&&200==http.status){var data=JSON.parse(http.responseText);data.success&&(self.refs.bal.innerHTML=data.balance)}}})}),riot.tag2("bookmark",'<div title="bookmark this"> <i class="fa fa-bookmark-o" aria-hidden="true" onclick="{toggleMark}" ref="icon"></i> </div>',"","",function(opts){this.id=opts.id,self=this,this.toggleMark=function(e){var url;this.bookmarked?(url="/api/bookmark/remove",this.refs.icon.className="fa fa-bookmark-o"):(url="/api/bookmark/add",this.refs.icon.className="fa fa-bookmark");var params="post_id="+this.id,http=new XMLHttpRequest;http.open("POST",url,!0),http.setRequestHeader("Content-type","application/x-www-form-urlencoded"),http.send(params),http.onreadystatechange=function(){if(4==http.readyState&&200==http.status){JSON.parse(http.responseText).success&&(self.bookmarked?self.bookmarked=!1:self.bookmarked=!0)}}},this.on("mount",function(){var http=new XMLHttpRequest,url="/api/bookmark/"+self.id+"/status";http.open("GET",url,!0),http.send(),http.onreadystatechange=function(){if(4==http.readyState&&200==http.status){JSON.parse(http.responseText).active?(self.bookmarked=!0,self.refs.icon.className="fa fa-bookmark"):(self.bookmarked=!1,self.refs.icon.className="fa fa-bookmark-o")}}})}),riot.tag2("confirm",'<div class="outerwrap"> <div class="wrap"> {opts.question} <br> <button onclick="{yes}">Yes</button> <button onclick="{no}">No</button> </div> </div>','confirm,[data-is="confirm"]{ position:absolute; top:50%; width: 100%; } confirm .outerwrap,[data-is="confirm"] .outerwrap{ text-align: center; } confirm .wrap,[data-is="confirm"] .wrap{ background-color: #fff; display:inline-block; padding: 1rem; border: 1px solid #cecece; }',"",function(opts){this.observable=opts.observable,this.id=opts.id,this.yes=function(){this.observable.trigger("yes",this.id),this.unmount(!0)}.bind(this),this.no=function(){this.unmount(!0)}.bind(this)}),riot.tag2("edit-msg",'<div id="editmodal"> <p class="modalclose"> <a onclick="{close}" href="#" class="close"> <i class="fa fa-times-circle-o" aria-hidden="true"></i> </a> </p> <div class="thumb" if="{thumb}" ref="thumb"> <img riot-src="{thumb}"> <p><a href="#" onclick="{removePhoto}">Remove</a></p> </div> <div class="type-selector"> <input type="radio" name="type" value="offering" ref="ptype" checked="{ptype == \'offering\'}"> Offering &nbsp;&nbsp;<input type="radio" name="type" value="seeking" ref="ptype" checked="{ptype == \'seeking\'}"> Seeking </div> <div id="photo-upload"> <p><strong>Photo</strong></p> <div class="upload-details"> <input type="file" name="photo" id="photo-file" ref="photo"><br> <p>File must be less than 4MB</p> </div> </div> <input type="text" name="title" riot-value="{title}" ref="title"> <textarea name="message" ref="message">{content}</textarea> <input type="text" name="contact" riot-value="{contact}" ref="contact"> <button onclick="{save}">Save</button> <div class="error">{feedback}</div> </div>','edit-msg button,[data-is="edit-msg"] button{ float:left; } edit-msg .error,[data-is="edit-msg"] .error{ float:left; line-height: 3.5rem; margin-left: 1.5rem; } edit-msg #photo-upload,[data-is="edit-msg"] #photo-upload{ float:left; } edit-msg .thumb,[data-is="edit-msg"] .thumb{ float:left; width: 100px; text-align: center; font-size: 75%; } edit-msg .type-selector input,[data-is="edit-msg"] .type-selector input{ display: inline; }',"",function(opts){this.id=opts.id,this.content=opts.content,this.title=opts.title,this.contact=opts.contact,this.observable=opts.observable,this.removeImg=!1,this.thumb=opts.thumb,this.ptype=opts.type;var self=this;this.close=function(e){e.preventDefault(),this.unmount(!0)},this.removePhoto=function(e){e.preventDefault(),this.refs.thumb.style.visibility="hidden",this.removeImg=!0},this.getType=function(){for(var i in this.refs.ptype)if(this.refs.ptype[i].checked)return this.ptype=this.refs.ptype[i].value,this.refs.ptype[i].value},this.save=function(e){e.preventDefault(),e.target.innerHTML='<i class="fa fa-circle-o-notch" aria-hidden="true"></i>';var data=new FormData;if(!self.refs.message.value)return void(this.feedback="Body cannot be empty");if(!self.refs.title.value)return void(this.feedback="Title cannot be empty");if(!self.refs.contact.value)return void(this.feedback="Contact info cannot be empty");if(data.append("message",self.refs.message.value),data.append("title",self.refs.title.value),data.append("contact",self.refs.contact.value),data.append("remove",self.removeImg),data.append("type",self.getType()),self.refs.photo.value){var file=self.refs.photo.files[0];data.append("photo",file)}var http=new XMLHttpRequest;http.open("POST","/api/post/edit/"+self.id,!0),http.send(data),http.onreadystatechange=function(){if(4==http.readyState&&200==http.status){var reply=JSON.parse(http.responseText);if(reply.success){var obj={};obj.body=self.refs.message.value,obj.title=self.refs.title.value,obj.contact=self.refs.contact.value,obj.type=self.ptype,self.refs.photo.value&&(obj.photo=reply.photo,obj.thumb=reply.thumb),self.removeImg&&(obj.remove=!0),self.observable.trigger("done",obj),self.unmount(!0)}}}}}),riot.tag2("flash-message",'<div class="flash">{msg} </div>',"","",function(opts){this.msg=opts.content;var self=this;opts.observable.on("done",function(msg){self.msg=msg,self.update()})}),riot.tag2("general-item-list",'<h6>{listTitle}</h6> <ul class="{type}" if="{items}"> <li each="{items}"><a href="{⁗/community/post/⁗ + _id}">{title}</a> &mdash; <a href="{⁗/user/profile/⁗ + username}">{username}</a></li> </ul> <p hide="{items}">None yet</p>',"","",function(opts){"offering"==opts.type?this.listTitle="Offers":this.listTitle="Requests",this.type=opts.type,this.items=null;var self=this;this.on("mount",function(){var http=new XMLHttpRequest,url="/api/items/"+self.type;http.open("GET",url,!0),http.setRequestHeader("Content-type","application/x-www-form-urlencoded"),http.send(),http.onreadystatechange=function(){if(4==http.readyState&&200==http.status){var response=JSON.parse(http.responseText);response.success&&(self.items=response.items,self.update())}}})}),riot.tag2("item-list",'<h4>{listTitle}</h4> <ul class="{type}" if="{items}"> <li each="{items}"><a href="{⁗/community/post/⁗ + _id}">{title}</a></li> </ul> <p show="{items.length < 1}">None yet</p>',"","",function(opts){this.listTitle=opts.type.charAt(0).toUpperCase()+opts.type.slice(1),this.type=opts.type,this.username=opts.username,this.items=[];var self=this;this.on("mount",function(){var http=new XMLHttpRequest,url="/api/items/"+self.type+"/"+self.username;http.open("POST",url,!0),http.setRequestHeader("Content-type","application/x-www-form-urlencoded"),http.send(),http.onreadystatechange=function(){if(4==http.readyState&&200==http.status){var response=JSON.parse(http.responseText);response.success&&(self.items=response.items,self.update())}}})}),riot.tag2("number-edit",'<span ref="num" onkeypress="{submit}">{number}</span> <a href="#" onclick="{toggleEditable}"><i class="fa fa-pencil" aria-hidden="true"></i></a>','number-edit .fa-pencil,[data-is="number-edit"] .fa-pencil{ visibility: hidden; } number-edit:hover .fa-pencil,[data-is="number-edit"]:hover .fa-pencil{ visibility: visible; } number-edit input,[data-is="number-edit"] input{ width: 3rem; } number-edit span.highlight,[data-is="number-edit"] span.highlight{ background-color: yellow; font-weight: bold; }',"",function(opts){if(this.number=opts.number,this.url=opts.url,this.showField=!1,this.userid=opts.userid,this.userid){var parts=this.url.split("[id]");this.url=parts[0]+this.userid+parts[1]}var self=this;this.toggleEditable=function(e){if(e.preventDefault(),this.showField)this.removeField(),this.changeNum();else{var field=document.createElement("input");field.value=this.number,field.setAttribute("id","numfield"),this.refs.num.innerHTML="",this.refs.num.appendChild(field),this.showField=!0}},this.removeField=function(){var field=document.getElementById("numfield");this.number=field.value,this.refs.num.removeChild(field),this.refs.num.innerHTML=this.number,this.showField=!1},this.submit=function(e){13==e.which&&(this.removeField(),this.changeNum())},this.changeNum=function(){this.refs.num.setAttribute("class","highlight");var http=new XMLHttpRequest,params="num="+this.number;http.open("POST",this.url,!0),http.setRequestHeader("Content-type","application/x-www-form-urlencoded"),http.send(params),http.onreadystatechange=function(){if(4==http.readyState&&200==http.status){JSON.parse(http.responseText).success&&self.refs.num.setAttribute("class","")}}}}),riot.tag2("photo-upload",'<p class="edit-photo"><i class="fa fa-pencil" aria-hidden="true" onclick="{toggleForm}"></i></p> <div id="user-photo-upload" show="{formVisible}"> <input type="file" name="profilephoto" id="user-photo-file" ref="photo"><br> <p>File must be less than 4MB</p> <button ref="button" onclick="{upload}">Upload</button> </div>',"","",function(opts){this.formVisible=!1,this.url=opts.url,this.observable=opts.observable;var self=this;this.toggleForm=function(){1==this.formVisible?this.formVisible=!1:this.formVisible=!0},this.upload=function(e){e.preventDefault(),self.refs.button.innerHTML='<i class="fa fa-circle-o-notch fa-spin fa-fw"></i>';var data=new FormData,file=self.refs.photo.files[0];data.append("photo",file);var http=new XMLHttpRequest;http.open("POST",self.url,!0),http.send(data),http.onreadystatechange=function(){if(4==http.readyState&&200==http.status){var reply=JSON.parse(http.responseText);reply.success&&(self.formVisible=!1,self.update(),self.refs.button.innerHTML="Upload",self.observable.trigger("done",reply.path))}else console.log(http.responseText),console.log("error")}}}),riot.tag2("ratio-chart",'<div class="ratio"> <div class="part earned-part" ref="earned">&nbsp;</div><div class="part spent-part" ref="spent">&nbsp;</div> <div>Incoming: {earned} | Outgoing: {spent}</div> </div>','ratio-chart .part,[data-is="ratio-chart"] .part{ display:inline-block; height: 4rem; } ratio-chart .earned-part,[data-is="ratio-chart"] .earned-part{ background-color: #50b6d6; } ratio-chart .spent-part,[data-is="ratio-chart"] .spent-part{ background-color: #1d434e; }',"",function(opts){this.spent=parseInt(opts.spent),this.earned=parseInt(opts.earned),this.size=parseInt(opts.size);var self=this;this.init=function(){this.spent||(this.spent=0),this.earned||(this.earned=0),this.total=this.spent+this.earned,this.unit=this.size/this.total,this.spentSize=Math.round(this.unit*this.spent),this.earnedSize=Math.round(this.unit*this.earned)},this.init(),this.on("mount",function(){self.refs.earned.style.width=this.earnedSize+"px",self.refs.spent.style.width=this.spentSize+"px"})}),riot.tag2("stats",'<div class="stats-container"> <div class="line1">&nbsp;</div> <div class="num" ref="exchanges"></div> <div ref="eword" class="line2">exchanges</div> </div> <div class="stats-container"> <div class="line1">with</div> <div class="num" ref="people"></div> <div ref="pword" class="line2">people</div> </div>','stats .num,[data-is="stats"] .num{ font-size: 4rem; } stats .line1,[data-is="stats"] .line1,stats .line2,[data-is="stats"] .line2{ text-transform: uppercase; } stats .line1,[data-is="stats"] .line1{ font-size: 80%; } stats .stats-container,[data-is="stats"] .stats-container{ width: 48%; float:left; }',"",function(opts){var self=this,eword="exchanges",pword="people";this.on("mount",function(){var http=new XMLHttpRequest,username=opts.username,url="/api/user/"+username+"/stats";http.open("GET",url,!0),http.send(),http.onreadystatechange=function(){if(4==http.readyState&&200==http.status){var data=JSON.parse(http.responseText);data.success&&(self.refs.exchanges.innerHTML=data.transactions,self.refs.people.innerHTML=data.people,1==data.transactions&&(eword="exchange"),1==data.people&&(pword="person"),self.refs.eword.innerHTML=eword,self.refs.pword.innerHTML=pword)}}})}),riot.tag2("user-field",'<div class="wrap"> <input type="text" name="{opts.name}" placeholder="username" id="receiver" ref="username" onblur="{findUser}"> <div class="field-validation" ref="feedback"></div> </div>','user-field,[data-is="user-field"]{ display:block; float:left; width: 100%; } user-field input,[data-is="user-field"] input{ float:left; } user-field .field-validation,[data-is="user-field"] .field-validation{ float:left; line-height: 3.5rem; }',"",function(opts){var self=this;this.on("mount",function(){opts.to&&(this.refs.username.value=opts.to,this.refs.username.focus())}),this.findUser=function(){var http=new XMLHttpRequest,username=this.refs.username.value,url="/api/user/"+username+"/exists";http.open("POST",url,!0),http.setRequestHeader("Content-type","application/x-www-form-urlencoded"),http.send(),http.onreadystatechange=function(){4==http.readyState&&200==http.status&&(console.log(http.responseText),JSON.parse(http.responseText).success?(self.refs.feedback.innerHTML='<i class="fa fa-check-circle" aria-hidden="true"></i>',self.refs.feedback.classList.remove("error"),self.refs.feedback.classList.add("success")):(self.refs.feedback.innerHTML="User not found",self.refs.feedback.classList.remove("success"),self.refs.feedback.classList.add("error")))}}});