riot.tag2("balance",'<h5 if="{opts.header == ⁗true⁗}">Balance</h5> <div class="bal" ref="bal"></div>','balance,[data-is="balance"]{ text-align: center; } balance .bal,[data-is="balance"] .bal{ font-size: 4rem; }',"",function(opts){var self=this;this.on("mount",function(){var http=new XMLHttpRequest,username=opts.username,url="/api/user/"+username+"/balance";http.open("GET",url,!0),http.send(),http.onreadystatechange=function(){if(4==http.readyState&&200==http.status){var data=JSON.parse(http.responseText);data.success&&(self.refs.bal.innerHTML=data.balance)}}})}),riot.tag2("confirm",'<div class="outerwrap"> <div class="wrap"> {opts.question} <br> <button onclick="{yes}">Yes</button> <button onclick="{no}">No</button> </div> </div>','confirm,[data-is="confirm"]{ position:absolute; top:50%; width: 100%; } confirm .outerwrap,[data-is="confirm"] .outerwrap{ text-align: center; } confirm .wrap,[data-is="confirm"] .wrap{ background-color: #fff; display:inline-block; padding: 1rem; border: 1px solid #cecece; }',"",function(opts){this.observable=opts.observable,this.id=opts.id,this.yes=function(){this.observable.trigger("yes",this.id),this.unmount(!0)}.bind(this),this.no=function(){this.unmount(!0)}.bind(this)}),riot.tag2("edit-msg",'<div id="editmodal"> <p class="modalclose"> <a onclick="{close}" href="#" class="close"> <i class="fa fa-times-circle-o" aria-hidden="true"></i> </a> </p> <div class="thumb" if="{thumb}" ref="thumb"> <img riot-src="{thumb}"> <p><a href="#" onclick="{removePhoto}">Remove</a></p> </div> <div id="photo-upload"> <p><strong>Photo</strong></p> <div class="upload-details"> <input type="file" name="photo" id="photo-file" ref="photo"><br> <p>File must be less than 4MB</p> </div> </div> <input type="text" name="title" riot-value="{title}" ref="title"> <textarea name="message" ref="message">{content}</textarea> <input type="text" name="contact" riot-value="{contact}" ref="contact"> <button onclick="{save}">Save</button> <div class="error">{feedback}</div> </div>','edit-msg button,[data-is="edit-msg"] button{ float:left; } edit-msg .error,[data-is="edit-msg"] .error{ float:left; line-height: 3.5rem; margin-left: 1.5rem; } edit-msg #photo-upload,[data-is="edit-msg"] #photo-upload{ float:left; margin-left: 1.5rem; } edit-msg .thumb,[data-is="edit-msg"] .thumb{ float:left; width: 100px; text-align: center; font-size: 75%; }',"",function(opts){this.id=opts.id,this.content=opts.content,this.title=opts.title,this.contact=opts.contact,this.observable=opts.observable,this.removeImg=!1,this.thumb=opts.thumb;var self=this;this.close=function(e){e.preventDefault(),this.unmount(!0)},this.removePhoto=function(e){e.preventDefault(),this.refs.thumb.style.visibility="hidden",this.removeImg=!0},this.save=function(e){e.preventDefault();var data=new FormData;if(!self.refs.message.value)return void(this.feedback="Body cannot be empty");if(!self.refs.title.value)return void(this.feedback="Title cannot be empty");if(!self.refs.contact.value)return void(this.feedback="Contact info cannot be empty");if(data.append("message",self.refs.message.value),data.append("title",self.refs.title.value),data.append("contact",self.refs.contact.value),data.append("remove",self.removeImg),self.refs.photo.value){var file=self.refs.photo.files[0];data.append("photo",file)}var http=new XMLHttpRequest;http.open("POST","/api/post/edit/"+self.id,!0),http.send(data),http.onreadystatechange=function(){if(4==http.readyState&&200==http.status){var reply=JSON.parse(http.responseText);if(reply.success){var obj={};obj.body=self.refs.message.value,obj.title=self.refs.title.value,obj.contact=self.refs.contact.value,self.refs.photo.value&&(obj.photo=reply.photo,obj.thumb=reply.thumb),self.removeImg&&(obj.remove=!0),self.observable.trigger("done",obj),self.unmount(!0)}}}}}),riot.tag2("editbox",'<div class="profile-text">{profile_text}</div> <p if="{isUser()}" class="edit-profile"> <a onclick="{toggle}" href="#"> <i class="fa fa-pencil" aria-hidden="true"></i> </a> </p> <div id="editmodal" show="{show_modal}"> <p class="modalclose"> <a onclick="{toggle}" href="#" class="close"> <i class="fa fa-times-circle-o" aria-hidden="true"></i> </a> </p> <textarea name="message" ref="message">{opts.profile_text}</textarea> <input type="hidden" name="id"> <button onclick="{save}">Save</button> </div>',"","",function(opts){this.profile_text=opts.profile_text,this.url=opts.url,this.show_modal=!1,this.observable=opts.observable;var self=this;this.isUser=function(){return opts.username==opts.profilename},this.toggle=function(e){e.preventDefault(),1==this.show_modal?this.show_modal=!1:this.show_modal=!0},this.save=function(){var http=new XMLHttpRequest;http.open("POST",self.url,!0),params="profile_text="+this.refs.message.value,http.setRequestHeader("Content-type","application/x-www-form-urlencoded"),http.send(params),http.onreadystatechange=function(){4==http.readyState&&200==http.status&&JSON.parse(http.responseText).success&&(self.show_modal=!1,self.profile_text=self.refs.message.value,self.update(),self.observable.trigger("done","Updated Successfully"))}}}),riot.tag2("flash-message",'<div class="flash">{msg} </div>',"","",function(opts){this.msg=opts.content;var self=this;opts.observable.on("done",function(msg){self.msg=msg,self.update()})}),riot.tag2("item-list",'<h4>{listTitle}</h4> <ul class="{type}" if="{items}"> <li each="{items}"><a href="{⁗/community/post/⁗ + _id}">{title}</a></li> </ul> <p hide="{items}">None yet</p>',"","",function(opts){this.listTitle=opts.type.charAt(0).toUpperCase()+opts.type.slice(1),this.type=opts.type,this.username=opts.username,this.items=null;var self=this;this.on("mount",function(){var http=new XMLHttpRequest,url="/api/items/"+self.type+"/"+self.username;http.open("POST",url,!0),http.setRequestHeader("Content-type","application/x-www-form-urlencoded"),http.send(),http.onreadystatechange=function(){if(4==http.readyState&&200==http.status){var response=JSON.parse(http.responseText);response.success&&(self.items=response.items,self.update())}}})}),riot.tag2("items",'<h1>Items {item_type}</h1> <ul> <li each="{items}"> {description}&nbsp;<a id="item_{id}" href="#" class="del" onclick="{delete}"><i class="fa fa-times" aria-hidden="true"></i></a> </li> </ul> <form onsubmit="{add}"> <input ref="input"> <button>Add</button> </form> <p>{success}</p>','items,[data-is="items"]{ display: block } items li,[data-is="items"] li{ list-style-type: none; } items a.del,[data-is="items"] a.del{ visibility: hidden; } items li:hover a.del,[data-is="items"] li:hover a.del{ visibility: visible; }',"",function(opts){this.items=opts.items,this.success="";var self=this;"offering"==opts.item_type.toLowerCase()?this.item_type="Offering":this.item_type="Seeking",this.add=function(e){if(e.preventDefault(),this.refs.input.value.length>0){var http=new XMLHttpRequest,params="type="+this.item_type.toLowerCase()+"&description="+this.refs.input.value,item=this.refs.input.value;this.refs.input.value="",http.open("POST","/api/user/item/new",!0),http.setRequestHeader("Content-type","application/x-www-form-urlencoded"),http.send(params),http.onreadystatechange=function(){4==http.readyState&&200==http.status&&(console.log(http.responseText),JSON.parse(http.responseText).success&&(self.success="Item added",console.log(self),self.items.push({description:item,id:JSON.parse(http.responseText).item_id}),self.update()))}}}.bind(this),this.delete=function(e){e.preventDefault();e.target.parentNode.parentNode;this.update()}.bind(this)}),riot.tag2("photo-editable",'<div class="{opts.imgclass}"> <div id="photo-upload" if="{formDisplay}"> <p><strong>Upload Photo</strong></p> <input type="file" name="photo" id="photo-file" ref="photo"><br> <p>File must be less than 4MB</p> <button onclick="{upload}">Upload</button> <p><a href="#" onclick="{hideForm}">Cancel</a></p> </div> <div class="edit-overlay"> <i class="fa fa-pencil" aria-hidden="true" onclick="{showForm}"></i> </div> <img riot-src="{src}" if="{imgDisplay}"> </div>','photo-editable .edit-overlay,[data-is="photo-editable"] .edit-overlay{ position: absolute; opacity: .5; background-color: #fff; border:1px solid #fff; text-align: center; visibility: hidden; } photo-editable .fa-pencil,[data-is="photo-editable"] .fa-pencil{ font-size: 3rem; cursor: pointer; } photo-editable #photo-upload,[data-is="photo-editable"] #photo-upload{ border: 1px solid #cecece; }',"",function(opts){this.src=opts.src,this.formDisplay=!1,this.imgDisplay=!0,this.on("mount",function(){$("img").on("load",function(){var w=$("img").width();$("img").height();$(".edit-overlay").css("width",w)}),$("img, .fa-pencil").on("mouseover",function(){$(".edit-overlay").css("visibility","visible")}),$(".edit-overlay").on("mouseout",function(){$(".edit-overlay").css("visibility","hidden")})}),this.showForm=function(){this.formDisplay=!0}.bind(this),this.hideForm=function(e){e.preventDefault(),this.formDisplay=!1,this.imgDisplay=!0}.bind(this),this.upload=function(e){e.preventDefault();var file=(new FormData,this.refs.photo);console.log(file)}.bind(this)}),riot.tag2("photo-upload",'<p class="edit-photo"><i class="fa fa-pencil" aria-hidden="true" onclick="{toggleForm}"></i></p> <div id="user-photo-upload" show="{formVisible}"> <input type="file" name="profilephoto" id="user-photo-file" ref="photo"><br> <p>File must be less than 4MB</p> <button ref="button" onclick="{upload}">Upload</button> </div>',"","",function(opts){this.formVisible=!1,this.url=opts.url,this.observable=opts.observable;var self=this;this.toggleForm=function(){1==this.formVisible?this.formVisible=!1:this.formVisible=!0},this.upload=function(e){e.preventDefault(),self.refs.button.innerHTML='<i class="fa fa-circle-o-notch fa-spin fa-fw"></i>';var data=new FormData,file=self.refs.photo.files[0];data.append("photo",file);var http=new XMLHttpRequest;http.open("POST",self.url,!0),http.send(data),http.onreadystatechange=function(){if(4==http.readyState&&200==http.status){var reply=JSON.parse(http.responseText);reply.success&&(self.formVisible=!1,self.update(),self.refs.button.innerHTML="Upload",self.observable.trigger("done",reply.path))}else console.log(http.responseText),console.log("error")}}}),riot.tag2("stats",'<div><span class="num" ref="exchanges"></span> <span ref="eword">exchanges</span></div> <div>with <span class="num" ref="people"></span> <span ref="pword">people</span></div>','stats .num,[data-is="stats"] .num{ font-weight: bold; }',"",function(opts){var self=this,eword="exchanges",pword="people";this.on("mount",function(){var http=new XMLHttpRequest,username=opts.username,url="/api/user/"+username+"/stats";http.open("GET",url,!0),http.send(),http.onreadystatechange=function(){if(4==http.readyState&&200==http.status){var data=JSON.parse(http.responseText);data.success&&(self.refs.exchanges.innerHTML=data.transactions,self.refs.people.innerHTML=data.people,1==data.transactions&&(eword="exchange"),1==data.people&&(pword="person"),self.refs.eword.innerHTML=eword,self.refs.pword.innerHTML=pword)}}})}),riot.tag2("user-field",'<div class="wrap"> <input type="text" name="{opts.name}" placeholder="username" id="receiver" ref="username" onblur="{findUser}"> <div class="field-validation" ref="feedback"></div> </div>','user-field,[data-is="user-field"]{ display:block; float:left; width: 100%; } user-field input,[data-is="user-field"] input{ float:left; } user-field .field-validation,[data-is="user-field"] .field-validation{ float:left; line-height: 3.5rem; }',"",function(opts){var self=this;this.on("mount",function(){opts.to&&(this.refs.username.value=opts.to,this.refs.username.focus())}),this.findUser=function(){var http=new XMLHttpRequest,username=this.refs.username.value,url="/api/user/"+username+"/exists";http.open("POST",url,!0),http.setRequestHeader("Content-type","application/x-www-form-urlencoded"),http.send(),http.onreadystatechange=function(){4==http.readyState&&200==http.status&&(console.log(http.responseText),JSON.parse(http.responseText).success?(self.refs.feedback.innerHTML="User found",self.refs.feedback.classList.remove("error"),self.refs.feedback.classList.add("success")):(self.refs.feedback.innerHTML="User not found",self.refs.feedback.classList.remove("success"),self.refs.feedback.classList.add("error")))}}});